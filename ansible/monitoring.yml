- name: Deploy Docker Monitoring Stack
  hosts: api
  become: yes

  vars:
    app_dir: "/opt/monitoring"
    app_user: "debian"

  tasks:
    - name: Install prerequisites for Docker repository
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - python3-pip
        state: present
        update_cache: yes

    - name: Create directory for GPG keys if it does not exist
      ansible.builtin.file:
        path: /usr/share/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker's official GPG key
      ansible.builtin.shell:
        cmd: curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        creates: /usr/share/keyrings/docker-archive-keyring.gpg
      args:
        warn: false

    - name: Set up the Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Install Docker Engine and Docker Compose v2 plugin
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: Add user '{{ app_user }}' to the 'docker' group
      ansible.builtin.user:
        name: "{{ app_user }}"
        groups: docker
        append: yes
      notify: Restart Docker Service

    - name: Create application directories
      ansible.builtin.file:
        path: "{{ app_dir }}/{{ item }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: "0755"
      loop:
        - prometheus
        - grafana
        - loki
        - promtail

    - name: Copy monitoring configuration files
      ansible.builtin.copy:
        src: "../monitoring/{{ item }}/"
        dest: "{{ app_dir }}/{{ item }}/"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: "0644"
        directory_mode: "0755"
      loop:
        - prometheus
        - loki
        - promtail

    - name: Generate Docker Compose file from template
      ansible.builtin.template:
        src: ../monitoring/docker-compose.yml.j2
        dest: "{{ app_dir }}/docker-compose.yml"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: "0644"

    - name: Deploy Docker Compose stack
      community.docker.docker_compose_v2:
        project_src: "{{ app_dir }}"
        state: present
        pull: always
      register: output

    - name: Display deployment output
      ansible.builtin.debug:
        var: output

  handlers:
    - name: Restart Docker Service
      ansible.builtin.service:
        name: docker
        state: restarted
